- Make repo public
  - Cleanup main README.md
    - Need a components section to explain what's in the repo
  - Remove? hfs crate

- FHIRPath
  - Implement fhirpath-server - Done
  - Test fhirpath-server and fhirpath-cli - Done
  - Are there unit tests for these two binaries - Done
  - Add performance tests
  - Unify the SofParameters and FhirPathParameters into something else - VersionIndependentParameters?
  - Setup build process for fhirpath-server
  - Setup hosting for fhirpath-server
  - Integrate into https://fhirpath-lab.com/FhirPath
  - Get listed here:  https://confluence.hl7.org/spaces/FHIRI/pages/161060129/FHIRPath+Implementations

- SQL On FHIR
  - source parameter - supporting both file path and AWS, and Google?
  - group parameter
  - parquet file(s)
  - Chunked transfer encoding?
  - Python Bindings
  - Setup build process for sof-server and sof-cli
  - Setup hosting for sof-server

- Process on a pile of JSON

- Add Github Actions for build and release process

- Re-work fhirpath to add a fhirpath server for eventual use with FHIR Path Lab
- Is there a documented fhirpath validator endpoint, and an apply?

- My CapabilityStatement for $run needs help - name, and unsure about operation vs. resource

- Need a full UCUM conversion engine - Document where we are - should we provide a http call to ucum's service until we have a Rust implementation, or should we use https://github.com/FHIR/Ucum-java? 

- Test to see if invalid attributes in the FHIR JSON model are allowed/disallowed?

- Investigate the tests in https://github.com/FHIR/fhir-test-cases - are the fhirpath tests different for each FHIR version?

- Modify fhir_gen to add Rust docs to r4.rs, others.


- The cycle detection is over Box'ing types.  It only needs to be done on one, but not the other. e.g. Reference and Identifier - future item - Likely need a priority element to 
  decide - could be helpful too in the future when we need to use it for Cassandra table separation

- Temporarily using strings for Date, DateTime, etc.  After we can prove parsing works, we will go back and code these as proper types.

- Review all READMEs and decide on the outline of yours
  - https://www.emilyomier.com/blog/argillas-readme
  - https://github.com/neondatabase/neon
  - https://github.com/refinedev/refine#readme
  - https://github.com/astral-sh/uv  
  - https://github.com/matiassingers/awesome-readme
  - Emily's presentation
  - MP
  - Neon, uv

    -Image
    -Product Name: Helios FHIR Server
    -Product tag line:  Build modern healthcare analytics applications.
    -One sentence product description: The Helios FHIR Server is an implementation of the [HL7® FHIR®](https://hl7.org/fhir) standard, built in Rust for high performance and targeted towards clinical analytics workloads.   
    -Why use Helios FHIR Server?
    -What do people build using the Helios FHIR Server?
    -Quick Start
    -Documentation (if not above)

- Manually added ViewDefinition Structure Definition to profiles-resources.json (deleting integer64) for generating r4.rs.  Need to also add it to the others except for r6 (anticipating a ViewDefinition resource to be added to r6) (and adding back in integer64)

- Added fhirVersion to constant_types.json
